facet_wrap(~hemisphere, scales = "free")
seed %>%
group_by(pollination_type)%>%
ggplot(aes(x=pollination_type, y=cv, fill=pollination_type))+
geom_boxplot()+
facet_wrap(~seed_dispersal_type)
seed%>%
group_by(genus)%>%
summarise(type=n_distinct(species))%>%
arrange(desc(type))
seed%>%
filter(genus == "QUERCUS" | genus == "PINUS" | genus == "ABIES")%>%
ggplot(aes(x=genus, y=cv, fill=genus))+
geom_boxplot()
seed%>%
filter(genus == "QUERCUS" | genus == "PINUS" | genus == "ABIES")%>%
ggplot(aes(x=latitude, fill=genus))+
geom_density(alpha=.2)
knitr::opts_chunk$set(echo = TRUE)
---
title: "15L group project"
---
title: "15L group project"
seed <- read.csv(here("project", "data", "interannual_variability.csv"))%>%
clean_names()%>%
select(!contains("sd_"))%>%
select(!contains("acf"))%>%
select(!contains("mid"))
skim(seed)
library(tidyverse)
library(skimr)
library(ggplot2)
library(here)
library(janitor)
library(ggmap)
seed <- seed%>%
mutate(region=case_when(-23.5<=latitude & latitude<=23.5~"Tropical",
23.5<latitude | -23.5>latitude~"Temperate",
))
head(seed, n=5)
lat <- c(-46.3, 65.9)
long <- c(-148.1, 176.5)
bounding <- make_bbox(long, lat, f = 0.05)
seed_map <- get_map(bounding, style = "watercolor", source = "stamen")
ggmap(seed_map)+
geom_point(data=seed, aes(longitude, latitude, color = cv))
seed%>%
ggplot(aes(x=latitude, y=cv))+
geom_point()+
geom_smooth(se=F)+
facet_wrap(~hemisphere, scales = "free")
seed %>%
ggplot(aes(x=cv_precip_annual, y=cv))+
geom_point()+
geom_smooth(se=F)
seed %>%
select(cv, cv_precip_spring, cv_precip_summer, region, pollination_type, seed_dispersal_type)%>%
rename(spring = cv_precip_spring, summer=cv_precip_summer)%>%
pivot_longer(cols = c("spring", "summer"),
values_to = "cv_precip",
names_to = "season")%>%
ggplot(aes(x=cv_precip, y=cv, color=season))+
geom_point(alpha=.2)+
geom_smooth(se=F)
seed %>%
group_by(pollination_type)%>%
ggplot(aes(x=pollination_type, y=cv, fill=pollination_type))+
geom_boxplot()+
facet_wrap(~seed_dispersal_type)
seed%>%
group_by(genus)%>%
summarise(type=n_distinct(species))%>%
arrange(desc(type))
seed%>%
filter(genus == "QUERCUS" | genus == "PINUS" | genus == "ABIES")%>%
ggplot(aes(x=genus, y=cv, fill=genus))+
geom_boxplot()
seed%>%
filter(genus == "QUERCUS" | genus == "PINUS" | genus == "ABIES")%>%
ggplot(aes(x=latitude, fill=genus))+
geom_density(alpha=.2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:",
choices=unique(homerange$taxon)),
hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")
),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot")
)
)
)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
penguins %>%
ggplot(aes(x=body_mass_g, y=flipper_length_mm))+
geom_point()
library(tidyverse)
library(janitor)
library("palmerpenguins")
options(scipen=999) #cancels the use of scientific notation for the session
penguins <- penguins
heartrate <- readr::read_csv("data/heartrate.csv")
heartrate <- heartrate %>%
add_column(no_drug = c(71, 79, 66, 62, 73, 81) )
homerange <- read_csv("data/modified_Tamburelloetal_HomeRangeDatabase.csv")
head(penguins)
penguins %>%
ggplot(aes(x = island, y = body_mass_g, fill = island)) +
geom_boxplot(na.rm = TRUE)+
coord_flip()
penguins %>%
ggplot(aes(x = island, y = body_mass_g, fill = island)) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
homerange %>%
ggplot(aes(x = taxon, y = body_mass_g, fill = island)) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
homerange %>%
ggplot(aes(x = log10.mass, y = taxon, fill = )) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
homerange %>%
ggplot(aes(x = log10.mass, y = taxon, fill = taxon )) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
homerange %>%
ggplot(aes(x = log10.mass, y = taxon, fill = taxon )) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE)
+
coord_flip()
homerange %>%
ggplot(aes(x = log10.mass, y = taxon, fill = taxon )) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
heartrate_long <- heartrate %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
heartrate_long
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
install.packages(alberusa)
install.packages(albersua)
install.packages(albersusa)
install.packages("albersusa")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
install.packages("albersusa")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("tidyverse")
library("shiny")
library("naniar")
library("shinydashboard")
require(janitor)
library(palmerpenguins)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
if (!require("tidyverse")) install.packages('tidyverse')
knitr::opts_chunk$set(echo = TRUE)
UC_admit <- readr::read_csv("data/UC_admit.csv")
ethnicity
names(Ethnicity)
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Year Options", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz" ),
selected = "Davis"),
selectInput("z", "Choose Admit Category"), choices = c("Applicants", "Enrollees", "Admits"),
selected = "Admits")
),
box(title= "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Year Options", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz" ),
selected = "Davis"),
selectInput("z", "Choose Admit Category"), choices = c("Applicants", "Enrollees", "Admits"),
selected = "Admits")
),
box(title= "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz" ),
selected = "Davis"),
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Year Options", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz" ),
selected = "Davis"),
selectInput("z", "Choose Admit Category"), choices = c("Applicants", "Enrollees", "Admits"),
selected = "Admits")
),
box(title= "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Choices", width = 3,
radioButtons("x", "Choose Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Choose Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
),
box(title= "University of California Admissions", width = 9,
plotOutput("plot", width = "800px", height = "800px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR))+
geom_col(fill="blue", position = "dodge", alpha=1, size=6)+
theme_dark(base_size = 20)+
labs(x=NULL, y="Total Individuals", fill="Fill Variable")+
theme(axis.text.x = element_text(angle = 65, hjust = .7))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Choices", width = 3,
radioButtons("x", "Choose Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Choose Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
),
box(title= "University of California Admissions", width = 9,
plotOutput("plot", width = "800px", height = "800px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR))+
geom_col(fill="blue", position = "dodge", alpha=1, size=6)+
theme_linedraw(base_size = 20)+
labs(x=NULL, y="Total Individuals", fill="Fill Variable")+
theme(axis.text.x = element_text(angle = 65, hjust = .7))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Choices", width = 3,
radioButtons("x", "Choose Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Choose Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
),
box(title= "University of California Admissions (Distribution by Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "800px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR))+
geom_col(fill="blue", position = "dodge", alpha=1, size=6)+
theme_linedraw(base_size = 20)+
labs(x=NULL, y="Total Individuals", fill="Fill Variable")+
theme(axis.text.x = element_text(angle = 65, hjust = .7))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University Of California Ethinic Distribution"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Choices", width = 3,
radioButtons("x", "Choose Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Choose Campus", choices = c("Davis", "Irvine", "Berkeley", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Choose Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
),
box(title= "University of California Admissions (Distribution by Ethnicity)", width = 9,
plotOutput("plot", width = "800px", height = "800px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR))+
geom_col(fill="blue", position = "dodge", alpha=1, size=6)+
theme_linedraw(base_size = 20)+
labs(x=NULL, y="Total Individuals", fill="Fill Variable")+
theme(axis.text.x = element_text(angle = 65, hjust = .7))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
install.packages(c("openssl", "rmarkdown", "survival", "xfun"))
install.packages("albersusa")
ui <- fluidPage(titlePanel(""),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
library(tidyverse)
library(skimr)
library(ggplot2)
library(here)
library(janitor)
library(ggmap)
library(shiny)
library(shinydashboard)
ui <- fluidPage(titlePanel(""),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
ui <- fluidPage(titlePanel(""),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
knitr::opts_chunk$set(echo = TRUE)
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = "red", main = "Histogram of Flipper Length V.S. Species", xlab = "flipper_length_mm")
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = "orange", main = "Histogram of Flipper Length V.S. Species", xlab = "flipper_length_mm")
library(ggmap)
library(tidyverse)
library(skimr)
library(ggplot2)
library(here)
library(janitor)
library(ggmap)
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = "orange", main = "Histogram of Flipper Length V.S. Species", xlab = "flipper_length_mm")
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = "orange", main = "Histogram of Flipper Length V.S. Species", xlab = "flipper_length_mm")
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = "orange", main = "Histogram of Flipper Length V.S. Species", xlab = flipper_length_mm)
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = "orange", main = "Histogram of Flipper Length V.S. Species", xlab = flipper_length_mm)
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = flipper_length_mm, main = "Histogram of Flipper Length V.S. Species", xlab = species)
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = flipper_length_mm, main = "Histogram of Flipper Length V.S. Species", xlab = species)
penguins %>%
hist(flipper_length_mm$species, breaks = 10, col = flipper_length_mm, main = "Histogram of Flipper Length V.S. Species", xlab = species)
penguins %>%
hist.default(., flipper_length_mm$species, breaks = 10, col = flipper_length_mm, main = "Histogram of Flipper Length V.S. Species", xlab = species)
penguins %>%
hist.default(., flipper_length_mm$species, breaks = 10, col = flipper_length_mm, main = "Histogram of Flipper Length V.S. Species", xlab = species)
penguins %>%
ggplot(aes(x=species, y=flipper_length_mm, fill="species"))+
geom_boxplot()
hist(penguins)
hist(palmerpenguins)
penguins %>%
hist(penguins$flipper_length_mm)
hist(penguins$flipper_length_mm)
hist(penguins)
hist(penguins,
main = "Histogram of Penguins",
xlab = "Flipper Length",
border = "blue",
col="green",
xlim =c(100,700),
las=1,
breaks = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
install.packages("albersusa")
library(albersusa)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
